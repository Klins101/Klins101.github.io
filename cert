<template>
  <div class="page-content">
    <!-- Hero Section -->
    <div class="media-hero">
      <div class="container">
        <div class="row align-items-center">
          <div class="col-lg-6">
            <h1 class="display-4 mb-4 text-white">Media Center</h1>
            <p class="lead mb-4 text-white">Watch, listen, and be inspired by our sermons, worship sessions, and spiritual content that will strengthen your faith journey</p>
            <div class="hero-stats">
              <div class="stat-item">
                <i class="fas fa-video"></i>
                <span>100+ Sermons</span>
              </div>
              <div class="stat-item">
                <i class="fas fa-calendar"></i>
                <span>Weekly Services</span>
              </div>
              <div class="stat-item">
                <i class="fas fa-images"></i>
                <span>Photo Gallery</span>
              </div>
            </div>
          </div>
          <div class="col-lg-6">
            <div class="hero-image-wrapper">
              <img src="http://localhost:8000/uploads/gallery/vol7.jpg" alt="Media Center" class="img-fluid rounded-4 shadow-lg">
              <div class="image-overlay">
                <div class="overlay-content">
                  <i class="fas fa-play fa-3x text-white mb-3"></i>
                  <h5 class="text-white">Watch & Listen</h5>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="container py-5">
      <div class="row">
        <div class="col-lg-12">
          <!-- Featured Content Section -->
          <div class="text-center mb-5">
            <span class="badge bg-primary mb-3">Featured Content</span>
            <h2 class="display-5 fw-bold">Watch Our Latest Message</h2>
            <p class="lead text-muted">Be encouraged and inspired by God's word</p>
          </div>
          
          <!-- Featured Video Section -->
          <div v-if="loading" class="text-center py-5">
            <div class="spinner-border text-primary" role="status">
              <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-3">Loading media content...</p>
          </div>
          
          <div v-else-if="error" class="alert alert-danger" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>
            {{ error }}
          </div>
          
          <div v-else-if="featuredSermon" class="featured-video card border-0 shadow-lg mb-5">
            <div class="card-body p-0">
              <div class="row g-0">
                <div class="col-lg-8">
                  <div class="video-wrapper" @click="openVideoModal(featuredSermon)">
                    <img 
                      :src="featuredSermon.thumbnail || getYouTubeThumbnail(featuredSermon.video_url) || 'http://localhost:8000/uploads/gallery/vol8.jpg'" 
                      :alt="featuredSermon.title" 
                      class="featured-thumbnail"
                    >
                    <div class="video-overlay">
                      <div class="play-button">
                        <i class="fas fa-play"></i>
                      </div>
                    </div>
                    <div class="video-badge">Featured</div>
                  </div>
                </div>
                <div class="col-lg-4">
                  <div class="video-info p-4 h-100 d-flex flex-column justify-content-center">
                    <div class="video-category">Latest Sermon</div>
                    <h4 class="video-title">{{ featuredSermon.title }}</h4>
                    <p class="video-meta">{{ featuredSermon.speaker }} • {{ formatDate(featuredSermon.date) }}</p>
                    <p class="video-description">{{ featuredSermon.description || 'Watch this inspiring message and be blessed by God\'s word.' }}</p>
                    <button @click="openVideoModal(featuredSermon)" class="btn btn-primary btn-lg">
                      <i class="fas fa-play me-2"></i>Watch Full Message
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Media Categories -->
          <div class="media-categories mb-5">
            <div class="text-center mb-4">
              <h3>Browse by Category</h3>
              <p class="text-muted">Find the content that speaks to your heart</p>
            </div>
            <div class="category-filters text-center mb-4">
              <button 
                class="btn btn-outline-primary me-2 mb-2" 
                :class="{ active: activeCategory === 'all' }"
                @click="setActiveCategory('all')"
              >
                All Content
              </button>
              <button 
                class="btn btn-outline-primary me-2 mb-2" 
                :class="{ active: activeCategory === 'sermons' }"
                @click="setActiveCategory('sermons')"
              >
                Sermons
              </button>
              <button 
                class="btn btn-outline-primary me-2 mb-2" 
                :class="{ active: activeCategory === 'worship' }"
                @click="setActiveCategory('worship')"
              >
                Worship
              </button>
              <button 
                class="btn btn-outline-primary me-2 mb-2" 
                :class="{ active: activeCategory === 'gallery' }"
                @click="setActiveCategory('gallery')"
              >
                Gallery
              </button>
            </div>
          </div>
          
          <!-- Recent Sermons -->
          <div class="content-section sermons-section" v-show="activeCategory === 'all' || activeCategory === 'sermons'">
            <div class="section-divider">
              <div class="section-header-wrapper">
                <h3 class="section-title mb-4">
                  <i class="fas fa-video text-primary me-2"></i>Recent Sermons
                </h3>
                <p class="section-subtitle">Watch our latest messages and be inspired by God's word</p>
              </div>
            </div>
            <div v-if="sermons.length > 0" class="row g-4 mb-5">
              <div v-for="(sermon, index) in sermons.slice(1, 7)" :key="sermon.id" class="col-md-6 col-lg-4">
                <div class="media-card card h-100 border-0 shadow-sm">
                  <div class="media-image" @click="openVideoModal(sermon)">
                    <img 
                      :src="sermon.thumbnail || getYouTubeThumbnail(sermon.video_url) || 'http://localhost:8000/uploads/gallery/vol9.jpg'" 
                      :alt="sermon.title" 
                      class="card-img-top"
                    >
                    <div class="media-overlay">
                      <div class="play-button-small">
                        <i class="fas fa-play"></i>
                      </div>
                    </div>
                  </div>
                  <div class="card-body p-4">
                    <div class="media-category-tag">Sermon</div>
                    <h5 class="card-title">{{ sermon.title }}</h5>
                    <p class="media-meta">{{ formatDate(sermon.date) }} • {{ sermon.speaker }}</p>
                    <p class="card-text">{{ sermon.description || 'Be blessed by this powerful message from God\'s word.' }}</p>
                    <div class="media-actions">
                      <button @click="openVideoModal(sermon)" class="btn btn-primary btn-sm">
                        <i class="fas fa-play me-1"></i>Watch
                      </button>
                      <a v-if="sermon.video_url" :href="sermon.video_url" target="_blank" class="btn btn-outline-secondary btn-sm">
                        <i class="fas fa-external-link-alt me-1"></i>YouTube
                      </a>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            
            <div v-else-if="!loading" class="text-center py-5">
              <i class="fas fa-video fa-3x text-muted mb-3"></i>
              <h4>No Sermons Available</h4>
              <p class="text-muted">Check back later for new sermon content.</p>
            </div>
          </div>
          
          <!-- Photo Gallery -->
          <div class="content-section gallery-section" v-show="activeCategory === 'all' || activeCategory === 'gallery'">
            <div class="section-divider">
              <div class="section-header-wrapper">
                <h3 class="section-title mb-4">
                  <i class="fas fa-images text-primary me-2"></i>Photo Gallery
                </h3>
                <p class="section-subtitle">Capture the moments and memories of our church family</p>
              </div>
            </div>
            <div v-if="galleryImages.length > 0" class="gallery-grid mb-5">
              <div v-for="album in galleryImages" :key="album.id" class="gallery-item" @click="openAlbumDirectly(album)">
                <div v-if="album.cover_image || (album.first_photo && album.first_photo.image)" class="gallery-image-wrapper">
                  <img 
                    :src="album.cover_image || album.first_photo.image" 
                    :alt="album.title" 
                    class="gallery-image"
                  >
                </div>
                <div v-else class="gallery-placeholder">
                  <i class="fas fa-images fa-2x"></i>
                  <p>{{ album.title }}</p>
                </div>
                <div class="gallery-overlay">
                  <div class="gallery-content">
                    <h5>{{ album.title }}</h5>
                    <p>{{ album.photo_count }} {{ album.photo_count === 1 ? 'photo' : 'photos' }}</p>
                  </div>
                </div>
              </div>
            </div>
            
            <div v-else-if="!loading" class="text-center py-5">
              <i class="fas fa-images fa-3x text-muted mb-3"></i>
              <h4>No Albums Available</h4>
              <p class="text-muted">Check back later for new photo albums.</p>
            </div>
          </div>
          
          
          <!-- Live Stream Section -->
          <div class="row mt-5">
            <div class="col-12">
              <div class="live-stream-section text-center bg-primary text-white rounded-4 p-5">
                <div class="live-indicator mb-3">
                  <span class="live-dot"></span>
                  <span class="live-text">LIVE STREAMING</span>
                </div>
                <h3 class="mb-4">Join Us Live Every Sunday</h3>
                <p class="lead mb-4">Experience our worship service from anywhere in the world. Connect with our community online and be part of something amazing!</p>
                <div class="live-details mb-4">
                  <div class="live-time">
                    <i class="fas fa-clock me-2"></i>
                    <span>Sundays at 10:00 AM (GMT)</span>
                  </div>
                </div>
                <div class="live-buttons">
                  <a href="https://us04web.zoom.us/j/6631263994" target="_blank" class="btn btn-light btn-lg me-3">
                    <i class="fas fa-video me-2"></i>Watch Live on Zoom
                  </a>
                  <a href="#" class="btn btn-outline-light btn-lg">
                    <i class="fas fa-bell me-2"></i>Get Notifications
                  </a>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Album Photos Modal -->
    <div v-if="showAlbumModal" class="album-modal-overlay" @click="closeAlbumModal">
      <div class="album-modal" @click.stop>
        <div class="album-modal-header">
          <h3>{{ selectedAlbum ? selectedAlbum.title : 'Album' }}</h3>
          <button @click="closeAlbumModal" class="album-modal-close">&times;</button>
        </div>
        <div class="album-modal-body">
          <div v-if="selectedAlbum && selectedAlbum.description" class="album-description mb-4">
            <p>{{ selectedAlbum.description }}</p>
          </div>
          <div class="album-photos-grid">
            <div v-for="photo in albumPhotos" :key="photo.id" class="album-photo-item">
              <img :src="photo.image" :alt="photo.title" class="album-photo-image" @click="openImageViewer(photo)">
              <div class="album-photo-overlay">
                <div class="album-photo-content">
                  <h6>{{ photo.title }}</h6>
                  <p v-if="photo.description">{{ photo.description }}</p>
                </div>
                <div class="album-photo-actions">
                  <button @click.stop="openImageViewer(photo)" class="btn btn-sm btn-light" title="View Full Size">
                    <i class="fas fa-expand"></i>
                  </button>
                  <button @click.stop="downloadImage(photo)" class="btn btn-sm btn-primary" title="Download">
                    <i class="fas fa-download"></i>
                  </button>
                </div>
              </div>
            </div>
          </div>
          <div v-if="albumPhotos.length === 0" class="text-center py-5">
            <i class="fas fa-images fa-3x text-muted mb-3"></i>
            <h4>No Photos in this Album</h4>
            <p class="text-muted">This album is empty.</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Image Viewer Modal -->
    <div v-if="showImageViewer" class="image-viewer-overlay" @click="closeImageViewer">
      <div class="image-viewer-modal" @click.stop>
        <div class="image-viewer-header">
          <h4>{{ currentImage ? currentImage.title : 'Image' }}</h4>
          <button @click="closeImageViewer" class="image-viewer-close">&times;</button>
        </div>
        <div class="image-viewer-body">
          <div class="image-viewer-navigation">
            <button 
              @click="previousImage" 
              class="nav-btn prev-btn" 
              :disabled="currentImageIndex === 0"
              v-if="albumPhotos.length > 1"
            >
              <i class="fas fa-chevron-left"></i>
            </button>
            <button 
              @click="nextImage" 
              class="nav-btn next-btn" 
              :disabled="currentImageIndex === albumPhotos.length - 1"
              v-if="albumPhotos.length > 1"
            >
              <i class="fas fa-chevron-right"></i>
            </button>
          </div>
          <div class="image-container">
            <img 
              v-if="currentImage" 
              :src="currentImage.image" 
              :alt="currentImage.title" 
              class="full-size-image"
            >
          </div>
          <div class="image-viewer-info">
            <div class="image-details">
              <h5>{{ currentImage ? currentImage.title : '' }}</h5>
              <p v-if="currentImage && currentImage.description">{{ currentImage.description }}</p>
              <small class="text-muted">{{ currentImageIndex + 1 }} of {{ albumPhotos.length }}</small>
            </div>
            <div class="image-actions">
              <button @click="downloadImage(currentImage)" class="btn btn-primary">
                <i class="fas fa-download me-2"></i>Download
              </button>
              <button @click="closeImageViewer" class="btn btn-secondary">
                <i class="fas fa-times me-2"></i>Close
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
export default {
  name: 'Media',
  data() {
    return {
      loading: true,
      sermons: [],
      galleryImages: [],
      featuredSermon: null,
      activeCategory: 'all',
      error: null,
      selectedAlbum: null,
      albumPhotos: [],
      showAlbumModal: false,
      showImageViewer: false,
      currentImage: null,
      currentImageIndex: 0
    }
  },
  async mounted() {
    await this.loadContent();
  },
  methods: {
    async loadContent() {
      this.loading = true;
      try {
        await Promise.all([
          this.loadSermons(),
          this.loadGalleryImages()
        ]);
        
        // Set featured sermon (most recent)
        if (this.sermons.length > 0) {
          this.featuredSermon = this.sermons[0];
        }
      } catch (error) {
        console.error('Error loading content:', error);
        this.error = 'Failed to load media content. Please try again later.';
      } finally {
        this.loading = false;
      }
    },
    
    async loadSermons() {
      try {
        const response = await fetch('http://localhost:8000/api/sermons/');
        if (response.ok) {
          const data = await response.json();
          this.sermons = data.results || data;
        } else {
          throw new Error('Failed to load sermons');
        }
      } catch (error) {
        console.error('Error loading sermons:', error);
        throw error;
      }
    },
    
    async loadGalleryImages() {
      try {
        const response = await fetch('http://localhost:8000/api/albums/public/');
        if (response.ok) {
          const data = await response.json();
          this.galleryImages = data.results || data;
        } else {
          throw new Error('Failed to load gallery albums');
        }
      } catch (error) {
        console.error('Error loading gallery albums:', error);
        throw error;
      }
    },

    async openAlbum(album) {
      try {
        const response = await fetch(`http://localhost:8000/api/gallery/album/${album.id}/`);
        if (response.ok) {
          const data = await response.json();
          this.selectedAlbum = album;
          this.albumPhotos = data.results || data;
          this.showAlbumModal = true;
        }
      } catch (error) {
        console.error('Error loading album photos:', error);
        alert('Error loading album photos');
      }
    },

    async openAlbumDirectly(album) {
      try {
        const response = await fetch(`http://localhost:8000/api/gallery/album/${album.id}/`);
        if (response.ok) {
          const data = await response.json();
          this.selectedAlbum = album;
          this.albumPhotos = data.results || data;
          
          // If album has photos, open the first one directly in image viewer
          if (this.albumPhotos.length > 0) {
            this.openImageViewer(this.albumPhotos[0]);
          } else {
            // If no photos, show the album modal
            this.showAlbumModal = true;
          }
        }
      } catch (error) {
        console.error('Error loading album photos:', error);
        alert('Error loading album photos');
      }
    },

    closeAlbumModal() {
      this.showAlbumModal = false;
      this.selectedAlbum = null;
      this.albumPhotos = [];
    },
    
    formatDate(dateString) {
      const date = new Date(dateString);
      return date.toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
      });
    },
    
    getYouTubeEmbedUrl(url) {
      if (!url) return null;
      
      // Extract video ID from various YouTube URL formats
      const videoIdMatch = url.match(/(?:youtube\.com\/(?:[^\/]+\/.+\/|(?:v|e(?:mbed)?)\/|.*[?&]v=)|youtu\.be\/)([^"&?\/\s]{11})/);
      
      if (videoIdMatch) {
        return `https://www.youtube.com/embed/${videoIdMatch[1]}`;
      }
      
      return null;
    },
    
    getYouTubeThumbnail(url) {
      if (!url) return null;
      
      const videoIdMatch = url.match(/(?:youtube\.com\/(?:[^\/]+\/.+\/|(?:v|e(?:mbed)?)\/|.*[?&]v=)|youtu\.be\/)([^"&?\/\s]{11})/);
      
      if (videoIdMatch) {
        return `https://img.youtube.com/vi/${videoIdMatch[1]}/maxresdefault.jpg`;
      }
      
      return null;
    },
    
    openVideoModal(sermon) {
      // Open YouTube video in new tab
      if (sermon.video_url) {
        window.open(sermon.video_url, '_blank');
      } else {
        // Show error message if no video URL
        alert('No video URL available for this sermon.');
      }
    },
    
    setActiveCategory(category) {
      this.activeCategory = category;
    },

    openImageViewer(photo) {
      this.currentImage = photo;
      this.currentImageIndex = this.albumPhotos.findIndex(p => p.id === photo.id);
      this.showImageViewer = true;
    },

    closeImageViewer() {
      this.showImageViewer = false;
      this.currentImage = null;
      this.currentImageIndex = 0;
    },

    nextImage() {
      if (this.currentImageIndex < this.albumPhotos.length - 1) {
        this.currentImageIndex++;
        this.currentImage = this.albumPhotos[this.currentImageIndex];
      }
    },

    previousImage() {
      if (this.currentImageIndex > 0) {
        this.currentImageIndex--;
        this.currentImage = this.albumPhotos[this.currentImageIndex];
      }
    },

    downloadImage(photo) {
      if (photo && photo.image) {
        const link = document.createElement('a');
        link.href = photo.image;
        link.download = photo.title || 'image';
        link.target = '_blank';
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
      }
    }
  }
}
</script>

<style scoped>
/* Hero Section */
.media-hero {
  background: linear-gradient(135deg, rgba(102, 126, 234, 0.9) 0%, rgba(118, 75, 162, 0.9) 100%),
              url('http://localhost:8000/uploads/gallery/h4.jpg');
  background-size: cover;
  background-position: center;
  background-attachment: fixed;
  padding: 5rem 0;
  margin-bottom: 0;
}

.hero-image-wrapper {
  position: relative;
  overflow: hidden;
  border-radius: 20px;
}

.hero-image-wrapper img {
  transition: transform 0.5s ease;
  height: 400px;
  width: 100%;
  object-fit: cover;
}

.hero-image-wrapper:hover img {
  transform: scale(1.05);
}

.image-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(102, 126, 234, 0.8) 0%, rgba(118, 75, 162, 0.8) 100%);
  opacity: 0;
  transition: opacity 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 20px;
}

.hero-image-wrapper:hover .image-overlay {
  opacity: 1;
}

.overlay-content {
  text-align: center;
  transform: translateY(20px);
  transition: transform 0.3s ease;
}

.hero-image-wrapper:hover .overlay-content {
  transform: translateY(0);
}

.hero-stats {
  display: flex;
  gap: 2rem;
  margin-top: 2rem;
}

.stat-item {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  color: white;
  font-weight: 600;
}

.stat-item i {
  font-size: 1.2rem;
  opacity: 0.9;
}

/* Featured Video */
.featured-video {
  border-radius: 20px;
  overflow: hidden;
}

.video-wrapper {
  position: relative;
  height: 300px;
  overflow: hidden;
}

.featured-thumbnail {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.video-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.3s ease;
}

.video-overlay:hover {
  background: rgba(0, 0, 0, 0.7);
}

.play-button {
  width: 80px;
  height: 80px;
  background: white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 2rem;
  color: var(--primary-color);
  transition: all 0.3s ease;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
}

.play-button:hover {
  transform: scale(1.1);
  box-shadow: 0 6px 25px rgba(0, 0, 0, 0.4);
}

.video-badge {
  position: absolute;
  top: 15px;
  left: 15px;
  background: #ff6b6b;
  color: white;
  padding: 8px 16px;
  border-radius: 20px;
  font-size: 0.8rem;
  font-weight: 600;
  text-transform: uppercase;
}

.video-info {
  background: #f8f9fa;
}

.video-category {
  background: var(--primary-color);
  color: white;
  padding: 6px 16px;
  border-radius: 15px;
  font-size: 0.8rem;
  font-weight: 600;
  text-transform: uppercase;
  display: inline-block;
  margin-bottom: 1rem;
}

.video-title {
  color: var(--text-dark);
  font-weight: 700;
  margin-bottom: 0.5rem;
}

.video-meta {
  color: var(--text-light);
  font-size: 0.9rem;
  margin-bottom: 1rem;
}

.video-description {
  color: var(--text-dark);
  line-height: 1.6;
  margin-bottom: 2rem;
}

/* Category Filters */
.category-filters .btn {
  border-radius: 25px;
  padding: 10px 20px;
  font-weight: 600;
  transition: all 0.3s ease;
}

.category-filters .btn.active {
  background: var(--primary-color);
  color: white;
  border-color: var(--primary-color);
}

/* Media Cards */
.media-card {
  transition: all 0.4s ease;
  border-radius: 20px;
  overflow: hidden;
  cursor: pointer;
}

.media-card:hover {
  transform: translateY(-10px);
  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15) !important;
}

.media-image {
  position: relative;
  height: 200px;
  overflow: hidden;
}

.media-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.4s ease;
}

.media-card:hover .media-image img {
  transform: scale(1.1);
}

.media-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.6);
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.media-card:hover .media-overlay {
  opacity: 1;
}

.play-button-small {
  width: 50px;
  height: 50px;
  background: white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.2rem;
  color: var(--primary-color);
  box-shadow: 0 3px 15px rgba(0, 0, 0, 0.3);
  transition: all 0.3s ease;
}

.play-button-small:hover {
  transform: scale(1.1);
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.4);
}

.media-duration {
  position: absolute;
  bottom: 10px;
  right: 10px;
  background: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 4px 8px;
  border-radius: 10px;
  font-size: 0.8rem;
}

.media-category-tag {
  background: var(--primary-color);
  color: white;
  padding: 4px 12px;
  border-radius: 12px;
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
  display: inline-block;
  margin-bottom: 1rem;
}

.media-meta {
  color: var(--text-light);
  font-size: 0.85rem;
  margin-bottom: 1rem;
}

.media-actions {
  display: flex;
  gap: 0.5rem;
}

.media-actions .btn {
  border-radius: 20px;
  font-size: 0.85rem;
  padding: 8px 16px;
}

/* Gallery Grid */
.gallery-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 1rem;
}

.gallery-item {
  position: relative;
  height: 250px;
  border-radius: 15px;
  overflow: hidden;
  cursor: pointer;
}

.gallery-image-wrapper {
  width: 100%;
  height: 100%;
}

.gallery-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.4s ease;
}

.gallery-item:hover .gallery-image {
  transform: scale(1.1);
}

.gallery-placeholder {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background: #f8f9fa;
  color: #6c757d;
  border: 2px dashed #dee2e6;
  border-radius: 8px;
}

.gallery-placeholder i {
  margin-bottom: 0.5rem;
  opacity: 0.6;
}

.gallery-placeholder p {
  margin: 0;
  font-weight: 500;
  font-size: 0.9rem;
  text-align: center;
  padding: 0 0.5rem;
}

.gallery-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(to bottom, transparent, rgba(0, 0, 0, 0.8));
  display: flex;
  align-items: flex-end;
  padding: 1.5rem;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.gallery-item:hover .gallery-overlay {
  opacity: 1;
}

.gallery-content h5 {
  color: white;
  font-weight: 700;
  margin-bottom: 0.5rem;
}

.gallery-content p {
  color: rgba(255, 255, 255, 0.9);
  margin: 0;
  font-size: 0.9rem;
}


/* Live Stream Section */
.live-stream-section {
  background: var(--primary-gradient) !important;
  position: relative;
  overflow: hidden;
}

.live-indicator {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

.live-dot {
  width: 12px;
  height: 12px;
  background: #ff4757;
  border-radius: 50%;
  animation: pulse 2s infinite;
}

.live-text {
  font-weight: 700;
  letter-spacing: 1px;
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(255, 71, 87, 0.7);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(255, 71, 87, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(255, 71, 87, 0);
  }
}

.live-time {
  background: rgba(255, 255, 255, 0.2);
  padding: 10px 20px;
  border-radius: 25px;
  display: inline-block;
}

.live-buttons .btn {
  border-radius: 25px;
  padding: 12px 30px;
  font-weight: 600;
  transition: all 0.3s ease;
}

.live-buttons .btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

/* Section Styling */
.content-section {
  margin-bottom: 4rem;
  position: relative;
}

.sermons-section {
  background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
  border-radius: 20px;
  padding: 3rem 2rem;
  margin: 3rem 0;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
}

.gallery-section {
  background: linear-gradient(135deg, #ffffff 0%, #f1f3f4 100%);
  border-radius: 20px;
  padding: 3rem 2rem;
  margin: 3rem 0;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
}

.section-divider {
  position: relative;
  margin-bottom: 2rem;
}

.section-divider::after {
  content: '';
  position: absolute;
  bottom: -1rem;
  left: 50%;
  transform: translateX(-50%);
  width: 60px;
  height: 3px;
  background: linear-gradient(90deg, var(--primary-color) 0%, rgba(102, 126, 234, 0.3) 100%);
  border-radius: 2px;
}

.section-header-wrapper {
  text-align: center;
  margin-bottom: 1rem;
}

.section-title {
  color: var(--text-dark);
  font-weight: 700;
  font-size: 2.2rem;
  margin-bottom: 0.5rem;
}

.section-subtitle {
  color: var(--text-light);
  font-size: 1.1rem;
  margin-bottom: 0;
  font-style: italic;
}

/* General Styling */
.badge {
  font-size: 0.9rem;
  padding: 10px 20px;
  border-radius: 20px;
  letter-spacing: 0.5px;
  text-transform: uppercase;
}

.display-5 {
  font-family: var(--font-secondary);
  font-weight: 700;
}

/* Video Link Styles */
.video-wrapper {
  cursor: pointer;
  transition: transform 0.3s ease;
}

.video-wrapper:hover {
  transform: scale(1.02);
}

.media-image {
  cursor: pointer;
  transition: transform 0.3s ease;
}

.media-image:hover {
  transform: scale(1.02);
}

/* Loading and Error States */
.spinner-border {
  width: 3rem;
  height: 3rem;
  border-width: 0.3em;
}

.alert {
  border-radius: 12px;
  border: none;
  padding: 1.5rem;
}

.alert-danger {
  background: #fff5f5;
  color: #c53030;
  border-left: 4px solid #e53e3e;
}

/* Responsive */
@media (max-width: 768px) {
  .media-hero {
    padding: 3rem 0;
    text-align: center;
  }
  
  .hero-image-wrapper img {
    height: 300px;
  }
  
  .hero-stats {
    justify-content: center;
    flex-wrap: wrap;
    gap: 1rem;
  }
  
  .video-wrapper {
    height: 200px;
  }
  
  .gallery-grid {
    grid-template-columns: 1fr;
  }
  
  .gallery-item {
    height: 200px;
  }
  
  
  .live-buttons .btn {
    display: block;
    margin-bottom: 15px;
    width: 100%;
  }
  
  .live-buttons .btn:last-child {
    margin-bottom: 0;
  }
  
  .media-actions {
    justify-content: center;
  }
  
  .sermons-section,
  .gallery-section {
    padding: 2rem 1rem;
    margin: 2rem 0;
  }
  
  .section-title {
    font-size: 1.8rem;
  }
  
  .section-subtitle {
    font-size: 1rem;
  }
}

@media (max-width: 576px) {
  .media-actions {
    flex-direction: column;
  }
  
  .sermons-section,
  .gallery-section {
    padding: 1.5rem 1rem;
    margin: 1.5rem 0;
  }
  
  .section-title {
    font-size: 1.5rem;
  }
  
  .section-subtitle {
    font-size: 0.9rem;
  }
}

/* Album Modal Styles */
.album-modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.9);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999;
  padding: 2rem;
}

.album-modal {
  background: white;
  border-radius: 12px;
  overflow: hidden;
  width: 90%;
  max-width: 1200px;
  max-height: 90vh;
  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.5);
  display: flex;
  flex-direction: column;
}

.album-modal-header {
  background: var(--primary-color);
  color: white;
  padding: 1rem 1.5rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-shrink: 0;
}

.album-modal-header h3 {
  margin: 0;
  font-size: 1.2rem;
  font-weight: 600;
}

.album-modal-close {
  background: none;
  border: none;
  color: white;
  font-size: 1.5rem;
  cursor: pointer;
  padding: 0;
  width: 30px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: background-color 0.2s ease;
}

.album-modal-close:hover {
  background: rgba(255, 255, 255, 0.2);
}

.album-modal-body {
  padding: 1.5rem;
  overflow-y: auto;
  flex: 1;
}

.album-description {
  background: #f8f9fa;
  padding: 1rem;
  border-radius: 8px;
  font-style: italic;
  color: #666;
}

.album-photos-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  gap: 1rem;
}

.album-photo-item {
  position: relative;
  aspect-ratio: 4/3;
  border-radius: 8px;
  overflow: hidden;
  cursor: pointer;
  transition: transform 0.3s ease;
}

.album-photo-item:hover {
  transform: scale(1.05);
}

.album-photo-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.album-photo-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(to bottom, transparent, rgba(0, 0, 0, 0.8));
  display: flex;
  align-items: flex-end;
  padding: 1rem;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.album-photo-item:hover .album-photo-overlay {
  opacity: 1;
}

.album-photo-content h6 {
  color: white;
  font-weight: 600;
  margin-bottom: 0.25rem;
  font-size: 0.9rem;
}

.album-photo-content p {
  color: rgba(255, 255, 255, 0.9);
  margin: 0;
  font-size: 0.8rem;
}

@media (max-width: 768px) {
  .album-modal {
    width: 95%;
    margin: 1rem;
  }
  
  .album-photos-grid {
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: 0.75rem;
  }
  
  .album-modal-body {
    padding: 1rem;
  }
}

/* Image Viewer Modal Styles */
.image-viewer-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.95);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 10000;
  padding: 2rem;
}

.image-viewer-modal {
  background: white;
  border-radius: 12px;
  overflow: hidden;
  width: 90%;
  max-width: 1000px;
  max-height: 90vh;
  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.8);
  display: flex;
  flex-direction: column;
}

.image-viewer-header {
  background: var(--primary-color);
  color: white;
  padding: 1rem 1.5rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-shrink: 0;
}

.image-viewer-header h4 {
  margin: 0;
  font-size: 1.2rem;
  font-weight: 600;
}

.image-viewer-close {
  background: none;
  border: none;
  color: white;
  font-size: 1.5rem;
  cursor: pointer;
  padding: 0;
  width: 30px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: background-color 0.2s ease;
}

.image-viewer-close:hover {
  background: rgba(255, 255, 255, 0.2);
}

.image-viewer-body {
  flex: 1;
  display: flex;
  flex-direction: column;
  position: relative;
  min-height: 0;
}

.image-viewer-navigation {
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  transform: translateY(-50%);
  z-index: 10;
  pointer-events: none;
}

.nav-btn {
  position: absolute;
  background: rgba(255, 255, 255, 0.9);
  border: none;
  border-radius: 50%;
  width: 50px;
  height: 50px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.25rem;
  color: var(--primary-color);
  cursor: pointer;
  transition: all 0.3s ease;
  pointer-events: auto;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.nav-btn:hover:not(:disabled) {
  background: white;
  transform: scale(1.1);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
}

.nav-btn:disabled {
  opacity: 0.3;
  cursor: not-allowed;
}

.prev-btn {
  left: 1rem;
}

.next-btn {
  right: 1rem;
}

.image-container {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 1rem;
  min-height: 0;
  overflow: hidden;
}

.full-size-image {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
  border-radius: 8px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
}

.image-viewer-info {
  background: #f8f9fa;
  padding: 1.5rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-shrink: 0;
}

.image-details h5 {
  margin: 0 0 0.5rem 0;
  color: var(--text-dark);
  font-weight: 600;
}

.image-details p {
  margin: 0 0 0.5rem 0;
  color: var(--text-light);
  font-size: 0.9rem;
}

.image-details small {
  color: var(--text-light);
  font-size: 0.8rem;
}

.image-actions {
  display: flex;
  gap: 0.75rem;
}

.image-actions .btn {
  border-radius: 8px;
  padding: 0.5rem 1rem;
  font-weight: 500;
  transition: all 0.3s ease;
}

.image-actions .btn:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

/* Album Photo Actions */
.album-photo-actions {
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  display: flex;
  gap: 0.25rem;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.album-photo-item:hover .album-photo-actions {
  opacity: 1;
}

.album-photo-actions .btn {
  width: 32px;
  height: 32px;
  border-radius: 50%;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.8rem;
  border: none;
  transition: all 0.3s ease;
}

.album-photo-actions .btn:hover {
  transform: scale(1.1);
}

/* Responsive styles for image viewer */
@media (max-width: 768px) {
  .image-viewer-overlay {
    padding: 1rem;
  }
  
  .image-viewer-modal {
    width: 95%;
    max-height: 95vh;
  }
  
  .image-viewer-info {
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }
  
  .image-actions {
    width: 100%;
    justify-content: center;
  }
  
  .nav-btn {
    width: 40px;
    height: 40px;
    font-size: 1rem;
  }
  
  .prev-btn {
    left: 0.5rem;
  }
  
  .next-btn {
    right: 0.5rem;
  }
  
  .image-container {
    padding: 0.5rem;
  }
}

@media (max-width: 576px) {
  .image-actions .btn {
    flex: 1;
    min-width: 0;
  }
  
  .image-viewer-header h4 {
    font-size: 1rem;
  }
  
  .image-viewer-info {
    padding: 1rem;
  }
}
</style>
